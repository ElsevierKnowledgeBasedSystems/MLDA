/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package utils;

import utils.ImbalancedFeature;
import utils.Util;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import mulan.data.MultiLabelInstances;

/**
 *
 * @author oscglezm
 */
public class EmergentOutput extends javax.swing.JFrame {

    /**
     * Creates new form metric_output
     */
    MultiLabelInstances dataset;
    int posx, posy;
    
    String[] info;
    boolean isMeka;
    
    // IR per labelset
    public EmergentOutput(MultiLabelInstances dataset, int posx, int posy, 
            String[] args, ArrayList<String> labelNames, 
            ImbalancedFeature[] label_frequency, boolean isMeka)
    {
        this.dataset = dataset;
        this.posx = posx;
        this.posy = posy;
        info = args;        
        this.isMeka = isMeka;
        
        this.setUndecorated(true);
        initComponents();
         
        print_information(labelNames,label_frequency);
        
        if(labelNames.size()>10) {
            this.setBounds(10, 30, 700, 600);
        }
        else{
            if(posy > 180 && posx<700) {
                this.setBounds(posx, posy-180, 600, 200);
            }
            else if (posy > 180 && posx>700 ) {
                this.setBounds(posx-500, posy, 600, 200);
            }
            else {
                this.setBounds(posx,posy+490,600,200);
            }
        }
    }        

    //IR per labelset
    private void print_information(ArrayList<String> labelnames, ImbalancedFeature[] label_frequency)
    {
        String tabs ="\t"+"\t" +"\t";
        
        int nRepeats = Integer.parseInt(info[1]);
        double value = nRepeats*1.0/dataset.getNumInstances();
        
        jTextArea1.append("Labelset: "+tabs+ info[0]+"\n");
        jTextArea1.append("# Labels: "+tabs+labelnames.size()+"\n");
        
        
        jTextArea1.append("Frequency: "+tabs+ Util.truncateValueAproxZero(Double.toString(value), 5)  +"\n");
        jTextArea1.append("# Examples: " +tabs+info[1]+"\n");
        
        ImbalancedFeature current;
        double freq;
        int repeat, id_label=1;
        
        for(int i=0;i<labelnames.size(); i++)
        {
            current = Util.getLabelByLabelname(labelnames.get(i), label_frequency);
              
            if (current != null)
            {
                repeat = current.getAppearances();
                freq = repeat*1.0/dataset.getNumInstances();
            
                jTextArea1.append("--------------------------------------------------------------------------------------------------------------------------" +"\n");
                jTextArea1.append("Label "+id_label +":  "+tabs+current.getName()+" \n");
                
                jTextArea1.append("Frequency:"+ tabs+ Util.truncateValueAproxZero(Double.toString(freq), 5) +"\n");
                  
                jTextArea1.append("# Examples: "+tabs+ repeat +"\n");
                  
                id_label++;
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Output values"));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jTextArea1FocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmergentOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmergentOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmergentOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmergentOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
